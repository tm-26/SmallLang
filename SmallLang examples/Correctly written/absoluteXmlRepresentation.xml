<?xml version="1.0" encoding="UTF-8" standalone="no"?><Program><Function Type="int">ABS<Parameters><Parameter Type="int">x</Parameter></Parameters></Function><Block><If><Condition/><RelationalNode Op="&lt;">x<IntegerConst>0</IntegerConst></RelationalNode><Block><Return><BinExprNode Op="*">x<SubExpression><SubExpression><BinExprNode Op="-"><IntegerConst>0</IntegerConst><IntegerConst>1</IntegerConst></BinExprNode></SubExpression></SubExpression></BinExprNode></Return></Block><Else><Block><Return>x</Return></Block></Else></If></Block><Decl><Var Type="int">num1</Var><SubExpression><BinExprNode Op="-"><IntegerConst>2</IntegerConst><IntegerConst>4</IntegerConst></BinExprNode></SubExpression></Decl><Decl><Var Type="int">num2</Var><SubExpression><BinExprNode Op="-"><IntegerConst>0</IntegerConst><IntegerConst>42</IntegerConst></BinExprNode></SubExpression></Decl><Print><FunctionCall>ABS<Parameters/>num1</FunctionCall></Print><Print><FunctionCall>ABS<Parameters/><IntegerConst>26</IntegerConst></FunctionCall></Print><Print><FunctionCall>ABS<Parameters/><IntegerConst>100</IntegerConst></FunctionCall></Print><Print><FunctionCall>ABS<Parameters/>num2</FunctionCall></Print></Program>